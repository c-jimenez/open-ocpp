/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/* Generated by json2cpp */

#ifndef OPENOCPP_{{ocpp_version_namespace.upper()}}_ICHARGEPOINTREQUESTHANDLER{{ocpp_version_suffix}}_H
#define OPENOCPP_{{ocpp_version_namespace.upper()}}_ICHARGEPOINTREQUESTHANDLER{{ocpp_version_suffix}}_H

{%- for msg_name in cs_msgs %}
#include "{{msg_name}}.h"
{%- endfor %}

#include <vector>

namespace ocpp
{
namespace centralsystem
{
namespace {{ocpp_version_namespace}}
{

/** @brief Interface for charge point requests implementations */
class IChargePointRequestHandler{{ocpp_version_suffix}}
{
  public:
    /** @brief Destructor */
    virtual ~IChargePointRequestHandler{{ocpp_version_suffix}}() { }

    /** @brief Called to notify the disconnection of the charge point */
    virtual void disconnected() = 0;

    {%- for msg_name in cs_msgs %}
    /**
     * @brief Called on reception of a {{msg_name}} request from the charge point
     * @param request Request to received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool on{{msg_name}}(const ocpp::messages::{{ocpp_version_namespace}}::{{msg_name}}Req& request,
                    ocpp::messages::{{ocpp_version_namespace}}::{{msg_name}}Conf&      response,
                    std::string&                                        error,
                    std::string&                                        message) = 0;
    {%- endfor %}
};

} // namespace {{ocpp_version_namespace}}
} // namespace centralsystem
} // namespace ocpp

#endif // OPENOCPP_{{ocpp_version_namespace.upper()}}_ICHARGEPOINTREQUESTHANDLER{{ocpp_version_suffix}}_H
