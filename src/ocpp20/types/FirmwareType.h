/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:UpdateFirmwareRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_FIRMWARETYPE_H
#define OPENOCPP_FIRMWARETYPE_H

#include "CustomDataType.h"

#include "CiStringType.h"
#include "DateTime.h"
#include "IMessageConverter.h"
#include "Optional.h"

namespace ocpp
{
namespace types
{
namespace ocpp20
{

/** @brief Firmware
urn:x-enexis:ecdm:uid:2:233291
Represents a copy of the firmware that can be loaded/updated on the Charging Station.
 */
struct FirmwareType
{
    /** @brief  */
    ocpp::types::Optional<CustomDataType> customData;
    /** @brief Firmware. Location. URI
urn:x-enexis:ecdm:uid:1:569460
URI defining the origin of the firmware. */
    ocpp::types::CiStringType<512u> location;
    /** @brief Firmware. Retrieve. Date_ Time
urn:x-enexis:ecdm:uid:1:569461
Date and time at which the firmware shall be retrieved. */
    ocpp::types::DateTime retrieveDateTime;
    /** @brief Firmware. Install. Date_ Time
urn:x-enexis:ecdm:uid:1:569462
Date and time at which the firmware shall be installed. */
    ocpp::types::Optional<ocpp::types::DateTime> installDateTime;
    /** @brief Certificate with which the firmware was signed.
PEM encoded X.509 certificate. */
    ocpp::types::Optional<ocpp::types::CiStringType<5500u>> signingCertificate;
    /** @brief Firmware. Signature. Signature
urn:x-enexis:ecdm:uid:1:569464
Base64 encoded firmware signature. */
    ocpp::types::Optional<ocpp::types::CiStringType<800u>> signature;
};

/** @brief Converter class for FirmwareType type */
class FirmwareTypeConverter : public ocpp::messages::IMessageConverter<FirmwareType>
{
  public:
    /** @brief Clone the converter */
    ocpp::messages::IMessageConverter<FirmwareType>* clone() const override { return new FirmwareTypeConverter(); }

    /** @brief Convert a FirmwareType from a JSON representation */
    bool fromJson(const rapidjson::Value&       json,
                  FirmwareType&                 data,
                  std::string&                  error_code,
                  [[maybe_unused]] std::string& error_message) override;

    /** @brief Convert a FirmwareType to a JSON representation */
    bool toJson(const FirmwareType& data, rapidjson::Document& json) override;
};

} // namespace ocpp20
} // namespace types
} // namespace ocpp

#endif // OPENOCPP_FIRMWARETYPE_H