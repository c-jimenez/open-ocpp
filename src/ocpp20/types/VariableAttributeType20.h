/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:NotifyReportRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_VARIABLEATTRIBUTETYPE20_H
#define OPENOCPP_VARIABLEATTRIBUTETYPE20_H

#include "AttributeEnumType20.h"
#include "CustomDataType20.h"
#include "MutabilityEnumType20.h"

#include "CiStringType.h"
#include "IMessageConverter.h"
#include "Optional.h"

namespace ocpp
{
namespace types
{
namespace ocpp20
{

/** @brief Attribute data of a variable.
 */
struct VariableAttributeType20
{
    /** @brief  */
    ocpp::types::Optional<CustomDataType20> customData;
    /** @brief  */
    ocpp::types::Optional<AttributeEnumType20> type;
    /** @brief Value of the attribute. May only be omitted when mutability is set to 'WriteOnly'.

The Configuration Variable &lt;&lt;configkey-reporting-value-size,ReportingValueSize&gt;&gt; can be used to limit GetVariableResult.attributeValue, VariableAttribute.value and EventData.actualValue. The max size of these values will always remain equal. */
    ocpp::types::Optional<ocpp::types::CiStringType<2500u>> value;
    /** @brief  */
    ocpp::types::Optional<MutabilityEnumType20> mutability;
    /** @brief If true, value will be persistent across system reboots or power down. Default when omitted is false. */
    ocpp::types::Optional<bool> persistent;
    /** @brief If true, value that will never be changed by the Charging Station at runtime. Default when omitted is false. */
    ocpp::types::Optional<bool> constant;
};

/** @brief Converter class for VariableAttributeType20 type */
class VariableAttributeType20Converter : public ocpp::messages::IMessageConverter<VariableAttributeType20>
{
  public:
    /** @brief Clone the converter */
    ocpp::messages::IMessageConverter<VariableAttributeType20>* clone() const override { return new VariableAttributeType20Converter(); }

    /** @brief Convert a VariableAttributeType20 from a JSON representation */
    bool fromJson(const rapidjson::Value&       json,
                  VariableAttributeType20&      data,
                  std::string&                  error_code,
                  [[maybe_unused]] std::string& error_message) override;

    /** @brief Convert a VariableAttributeType20 to a JSON representation */
    bool toJson(const VariableAttributeType20& data, rapidjson::Document& json) override;
};

} // namespace ocpp20
} // namespace types
} // namespace ocpp

#endif // OPENOCPP_VARIABLEATTRIBUTETYPE20_H