/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:BootNotificationRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_CHARGINGSTATIONTYPE20_H
#define OPENOCPP_CHARGINGSTATIONTYPE20_H

#include "CustomDataType20.h"
#include "ModemType20.h"

#include "CiStringType.h"
#include "IMessageConverter.h"
#include "Optional.h"

namespace ocpp
{
namespace types
{
namespace ocpp20
{

/** @brief Charge_ Point
urn:x-oca:ocpp:uid:2:233122
The physical system where an Electrical Vehicle (EV) can be charged.
 */
struct ChargingStationType20
{
    /** @brief  */
    ocpp::types::Optional<CustomDataType20> customData;
    /** @brief Device. Serial_ Number. Serial_ Number
urn:x-oca:ocpp:uid:1:569324
Vendor-specific device identifier. */
    ocpp::types::Optional<ocpp::types::CiStringType<25u>> serialNumber;
    /** @brief Device. Model. CI20_ Text
urn:x-oca:ocpp:uid:1:569325
Defines the model of the device. */
    ocpp::types::CiStringType<20u> model;
    /** @brief  */
    ocpp::types::Optional<ModemType20> modem;
    /** @brief Identifies the vendor (not necessarily in a unique manner). */
    ocpp::types::CiStringType<50u> vendorName;
    /** @brief This contains the firmware version of the Charging Station. */
    ocpp::types::Optional<ocpp::types::CiStringType<50u>> firmwareVersion;
};

/** @brief Converter class for ChargingStationType20 type */
class ChargingStationType20Converter : public ocpp::messages::IMessageConverter<ChargingStationType20>
{
  public:
    /** @brief Clone the converter */
    ocpp::messages::IMessageConverter<ChargingStationType20>* clone() const override { return new ChargingStationType20Converter(); }

    /** @brief Convert a ChargingStationType20 from a JSON representation */
    bool fromJson(const rapidjson::Value&       json,
                  ChargingStationType20&        data,
                  std::string&                  error_code,
                  [[maybe_unused]] std::string& error_message) override;

    /** @brief Convert a ChargingStationType20 to a JSON representation */
    bool toJson(const ChargingStationType20& data, rapidjson::Document& json) override;
};

} // namespace ocpp20
} // namespace types
} // namespace ocpp

#endif // OPENOCPP_CHARGINGSTATIONTYPE20_H