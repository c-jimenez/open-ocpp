/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:MeterValuesRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_PHASEENUMTYPE_H
#define OPENOCPP_PHASEENUMTYPE_H

#include "EnumToStringFromString.h"

namespace ocpp
{
namespace types
{
namespace ocpp20
{

/** @brief Sampled_ Value. Phase. Phase_ Code
urn:x-oca:ocpp:uid:1:569264
Indicates how the measured value is to be interpreted. For instance between L1 and neutral (L1-N) Please note that not all values of phase are applicable to all Measurands. When phase is absent, the measured value is interpreted as an overall value. */
enum class PhaseEnumType
{
    L1,
    L2,
    L3,
    N,
    L1_N,
    L2_N,
    L3_N,
    L1_L2,
    L2_L3,
    L3_L1,
};

/** @brief Helper to convert a PhaseEnumType enum to string */
extern const EnumToStringFromString<PhaseEnumType> PhaseEnumTypeHelper;

} // namespace ocpp20
} // namespace types
} // namespace ocpp

#endif // OPENOCPP_PHASEENUMTYPE_H