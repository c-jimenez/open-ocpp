/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:NotifyEVChargingNeedsRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_ACCHARGINGPARAMETERSTYPE_H
#define OPENOCPP_ACCHARGINGPARAMETERSTYPE_H

#include "CustomDataType.h"

#include "IMessageConverter.h"
#include "Optional.h"

namespace ocpp
{
namespace types
{
namespace ocpp20
{

/** @brief AC_ Charging_ Parameters
urn:x-oca:ocpp:uid:2:233250
EV AC charging parameters.

 */
struct ACChargingParametersType
{
    /** @brief  */
    ocpp::types::Optional<CustomDataType> customData;
    /** @brief AC_ Charging_ Parameters. Energy_ Amount. Energy_ Amount
urn:x-oca:ocpp:uid:1:569211
Amount of energy requested (in Wh). This includes energy required for preconditioning. */
    int energyAmount;
    /** @brief AC_ Charging_ Parameters. EV_ Min. Current
urn:x-oca:ocpp:uid:1:569212
Minimum current (amps) supported by the electric vehicle (per phase). */
    int evMinCurrent;
    /** @brief AC_ Charging_ Parameters. EV_ Max. Current
urn:x-oca:ocpp:uid:1:569213
Maximum current (amps) supported by the electric vehicle (per phase). Includes cable capacity. */
    int evMaxCurrent;
    /** @brief AC_ Charging_ Parameters. EV_ Max. Voltage
urn:x-oca:ocpp:uid:1:569214
Maximum voltage supported by the electric vehicle */
    int evMaxVoltage;
};

/** @brief Converter class for ACChargingParametersType type */
class ACChargingParametersTypeConverter : public ocpp::messages::IMessageConverter<ACChargingParametersType>
{
  public:
    /** @brief Clone the converter */
    ocpp::messages::IMessageConverter<ACChargingParametersType>* clone() const override { return new ACChargingParametersTypeConverter(); }

    /** @brief Convert a ACChargingParametersType from a JSON representation */
    bool fromJson(const rapidjson::Value&       json,
                  ACChargingParametersType&     data,
                  std::string&                  error_code,
                  [[maybe_unused]] std::string& error_message) override;

    /** @brief Convert a ACChargingParametersType to a JSON representation */
    bool toJson(const ACChargingParametersType& data, rapidjson::Document& json) override;
};

} // namespace ocpp20
} // namespace types
} // namespace ocpp

#endif // OPENOCPP_ACCHARGINGPARAMETERSTYPE_H