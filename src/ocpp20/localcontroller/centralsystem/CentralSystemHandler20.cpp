/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/* Generated by json2cpp */

#include "CentralSystemHandler20.h"
#include "ILocalControllerConfig20.h"
#include "MessageDispatcher.h"
#include "MessagesConverter20.h"

using namespace ocpp::messages;
using namespace ocpp::messages::ocpp20;
using namespace ocpp::types;
using namespace ocpp::types::ocpp20;

namespace ocpp
{
namespace localcontroller
{
namespace ocpp20
{

/** @brief Constructor */
CentralSystemHandler20::CentralSystemHandler20(const std::string&                                 identifier,
                                               const ocpp::messages::ocpp20::MessagesConverter20& messages_converter,
                                               ocpp::messages::MessageDispatcher&                 msg_dispatcher)
    : GenericMessageHandler<CancelReservation20Req, CancelReservation20Conf>(CANCELRESERVATION20_ACTION, messages_converter),
      GenericMessageHandler<CertificateSigned20Req, CertificateSigned20Conf>(CERTIFICATESIGNED20_ACTION, messages_converter),
      GenericMessageHandler<ChangeAvailability20Req, ChangeAvailability20Conf>(CHANGEAVAILABILITY20_ACTION, messages_converter),
      GenericMessageHandler<ClearCache20Req, ClearCache20Conf>(CLEARCACHE20_ACTION, messages_converter),
      GenericMessageHandler<ClearChargingProfile20Req, ClearChargingProfile20Conf>(CLEARCHARGINGPROFILE20_ACTION, messages_converter),
      GenericMessageHandler<ClearDisplayMessage20Req, ClearDisplayMessage20Conf>(CLEARDISPLAYMESSAGE20_ACTION, messages_converter),
      GenericMessageHandler<ClearVariableMonitoring20Req, ClearVariableMonitoring20Conf>(CLEARVARIABLEMONITORING20_ACTION,
                                                                                         messages_converter),
      GenericMessageHandler<CustomerInformation20Req, CustomerInformation20Conf>(CUSTOMERINFORMATION20_ACTION, messages_converter),
      GenericMessageHandler<DataTransfer20Req, DataTransfer20Conf>(DATATRANSFER20_ACTION, messages_converter),
      GenericMessageHandler<DeleteCertificate20Req, DeleteCertificate20Conf>(DELETECERTIFICATE20_ACTION, messages_converter),
      GenericMessageHandler<Get15118EVCertificate20Req, Get15118EVCertificate20Conf>(GET15118EVCERTIFICATE20_ACTION, messages_converter),
      GenericMessageHandler<GetBaseReport20Req, GetBaseReport20Conf>(GETBASEREPORT20_ACTION, messages_converter),
      GenericMessageHandler<GetCertificateStatus20Req, GetCertificateStatus20Conf>(GETCERTIFICATESTATUS20_ACTION, messages_converter),
      GenericMessageHandler<GetChargingProfiles20Req, GetChargingProfiles20Conf>(GETCHARGINGPROFILES20_ACTION, messages_converter),
      GenericMessageHandler<GetCompositeSchedule20Req, GetCompositeSchedule20Conf>(GETCOMPOSITESCHEDULE20_ACTION, messages_converter),
      GenericMessageHandler<GetDisplayMessages20Req, GetDisplayMessages20Conf>(GETDISPLAYMESSAGES20_ACTION, messages_converter),
      GenericMessageHandler<GetInstalledCertificateIds20Req, GetInstalledCertificateIds20Conf>(GETINSTALLEDCERTIFICATEIDS20_ACTION,
                                                                                               messages_converter),
      GenericMessageHandler<GetLocalListVersion20Req, GetLocalListVersion20Conf>(GETLOCALLISTVERSION20_ACTION, messages_converter),
      GenericMessageHandler<GetLog20Req, GetLog20Conf>(GETLOG20_ACTION, messages_converter),
      GenericMessageHandler<GetMonitoringReport20Req, GetMonitoringReport20Conf>(GETMONITORINGREPORT20_ACTION, messages_converter),
      GenericMessageHandler<GetReport20Req, GetReport20Conf>(GETREPORT20_ACTION, messages_converter),
      GenericMessageHandler<GetTransactionStatus20Req, GetTransactionStatus20Conf>(GETTRANSACTIONSTATUS20_ACTION, messages_converter),
      GenericMessageHandler<GetVariables20Req, GetVariables20Conf>(GETVARIABLES20_ACTION, messages_converter),
      GenericMessageHandler<InstallCertificate20Req, InstallCertificate20Conf>(INSTALLCERTIFICATE20_ACTION, messages_converter),
      GenericMessageHandler<PublishFirmware20Req, PublishFirmware20Conf>(PUBLISHFIRMWARE20_ACTION, messages_converter),
      GenericMessageHandler<RequestStartTransaction20Req, RequestStartTransaction20Conf>(REQUESTSTARTTRANSACTION20_ACTION,
                                                                                         messages_converter),
      GenericMessageHandler<RequestStopTransaction20Req, RequestStopTransaction20Conf>(REQUESTSTOPTRANSACTION20_ACTION, messages_converter),
      GenericMessageHandler<ReserveNow20Req, ReserveNow20Conf>(RESERVENOW20_ACTION, messages_converter),
      GenericMessageHandler<Reset20Req, Reset20Conf>(RESET20_ACTION, messages_converter),
      GenericMessageHandler<SendLocalList20Req, SendLocalList20Conf>(SENDLOCALLIST20_ACTION, messages_converter),
      GenericMessageHandler<SetChargingProfile20Req, SetChargingProfile20Conf>(SETCHARGINGPROFILE20_ACTION, messages_converter),
      GenericMessageHandler<SetDisplayMessage20Req, SetDisplayMessage20Conf>(SETDISPLAYMESSAGE20_ACTION, messages_converter),
      GenericMessageHandler<SetMonitoringBase20Req, SetMonitoringBase20Conf>(SETMONITORINGBASE20_ACTION, messages_converter),
      GenericMessageHandler<SetMonitoringLevel20Req, SetMonitoringLevel20Conf>(SETMONITORINGLEVEL20_ACTION, messages_converter),
      GenericMessageHandler<SetNetworkProfile20Req, SetNetworkProfile20Conf>(SETNETWORKPROFILE20_ACTION, messages_converter),
      GenericMessageHandler<SetVariableMonitoring20Req, SetVariableMonitoring20Conf>(SETVARIABLEMONITORING20_ACTION, messages_converter),
      GenericMessageHandler<SetVariables20Req, SetVariables20Conf>(SETVARIABLES20_ACTION, messages_converter),
      GenericMessageHandler<TriggerMessage20Req, TriggerMessage20Conf>(TRIGGERMESSAGE20_ACTION, messages_converter),
      GenericMessageHandler<UnlockConnector20Req, UnlockConnector20Conf>(UNLOCKCONNECTOR20_ACTION, messages_converter),
      GenericMessageHandler<UnpublishFirmware20Req, UnpublishFirmware20Conf>(UNPUBLISHFIRMWARE20_ACTION, messages_converter),
      GenericMessageHandler<UpdateFirmware20Req, UpdateFirmware20Conf>(UPDATEFIRMWARE20_ACTION, messages_converter),

      m_identifier(identifier),
      m_charge_point()
{
    msg_dispatcher.registerHandler(CANCELRESERVATION20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<CancelReservation20Req, CancelReservation20Conf>*>(this));
    msg_dispatcher.registerHandler(CERTIFICATESIGNED20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<CertificateSigned20Req, CertificateSigned20Conf>*>(this));
    msg_dispatcher.registerHandler(CHANGEAVAILABILITY20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<ChangeAvailability20Req, ChangeAvailability20Conf>*>(this));
    msg_dispatcher.registerHandler(CLEARCACHE20_ACTION, *dynamic_cast<GenericMessageHandler<ClearCache20Req, ClearCache20Conf>*>(this));
    msg_dispatcher.registerHandler(CLEARCHARGINGPROFILE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<ClearChargingProfile20Req, ClearChargingProfile20Conf>*>(this));
    msg_dispatcher.registerHandler(CLEARDISPLAYMESSAGE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<ClearDisplayMessage20Req, ClearDisplayMessage20Conf>*>(this));
    msg_dispatcher.registerHandler(
        CLEARVARIABLEMONITORING20_ACTION,
        *dynamic_cast<GenericMessageHandler<ClearVariableMonitoring20Req, ClearVariableMonitoring20Conf>*>(this));
    msg_dispatcher.registerHandler(CUSTOMERINFORMATION20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<CustomerInformation20Req, CustomerInformation20Conf>*>(this));
    msg_dispatcher.registerHandler(DATATRANSFER20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<DataTransfer20Req, DataTransfer20Conf>*>(this));
    msg_dispatcher.registerHandler(DELETECERTIFICATE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<DeleteCertificate20Req, DeleteCertificate20Conf>*>(this));
    msg_dispatcher.registerHandler(GET15118EVCERTIFICATE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<Get15118EVCertificate20Req, Get15118EVCertificate20Conf>*>(this));
    msg_dispatcher.registerHandler(GETBASEREPORT20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetBaseReport20Req, GetBaseReport20Conf>*>(this));
    msg_dispatcher.registerHandler(GETCERTIFICATESTATUS20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetCertificateStatus20Req, GetCertificateStatus20Conf>*>(this));
    msg_dispatcher.registerHandler(GETCHARGINGPROFILES20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetChargingProfiles20Req, GetChargingProfiles20Conf>*>(this));
    msg_dispatcher.registerHandler(GETCOMPOSITESCHEDULE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetCompositeSchedule20Req, GetCompositeSchedule20Conf>*>(this));
    msg_dispatcher.registerHandler(GETDISPLAYMESSAGES20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetDisplayMessages20Req, GetDisplayMessages20Conf>*>(this));
    msg_dispatcher.registerHandler(
        GETINSTALLEDCERTIFICATEIDS20_ACTION,
        *dynamic_cast<GenericMessageHandler<GetInstalledCertificateIds20Req, GetInstalledCertificateIds20Conf>*>(this));
    msg_dispatcher.registerHandler(GETLOCALLISTVERSION20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetLocalListVersion20Req, GetLocalListVersion20Conf>*>(this));
    msg_dispatcher.registerHandler(GETLOG20_ACTION, *dynamic_cast<GenericMessageHandler<GetLog20Req, GetLog20Conf>*>(this));
    msg_dispatcher.registerHandler(GETMONITORINGREPORT20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetMonitoringReport20Req, GetMonitoringReport20Conf>*>(this));
    msg_dispatcher.registerHandler(GETREPORT20_ACTION, *dynamic_cast<GenericMessageHandler<GetReport20Req, GetReport20Conf>*>(this));
    msg_dispatcher.registerHandler(GETTRANSACTIONSTATUS20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetTransactionStatus20Req, GetTransactionStatus20Conf>*>(this));
    msg_dispatcher.registerHandler(GETVARIABLES20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<GetVariables20Req, GetVariables20Conf>*>(this));
    msg_dispatcher.registerHandler(INSTALLCERTIFICATE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<InstallCertificate20Req, InstallCertificate20Conf>*>(this));
    msg_dispatcher.registerHandler(PUBLISHFIRMWARE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<PublishFirmware20Req, PublishFirmware20Conf>*>(this));
    msg_dispatcher.registerHandler(
        REQUESTSTARTTRANSACTION20_ACTION,
        *dynamic_cast<GenericMessageHandler<RequestStartTransaction20Req, RequestStartTransaction20Conf>*>(this));
    msg_dispatcher.registerHandler(REQUESTSTOPTRANSACTION20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<RequestStopTransaction20Req, RequestStopTransaction20Conf>*>(this));
    msg_dispatcher.registerHandler(RESERVENOW20_ACTION, *dynamic_cast<GenericMessageHandler<ReserveNow20Req, ReserveNow20Conf>*>(this));
    msg_dispatcher.registerHandler(RESET20_ACTION, *dynamic_cast<GenericMessageHandler<Reset20Req, Reset20Conf>*>(this));
    msg_dispatcher.registerHandler(SENDLOCALLIST20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SendLocalList20Req, SendLocalList20Conf>*>(this));
    msg_dispatcher.registerHandler(SETCHARGINGPROFILE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetChargingProfile20Req, SetChargingProfile20Conf>*>(this));
    msg_dispatcher.registerHandler(SETDISPLAYMESSAGE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetDisplayMessage20Req, SetDisplayMessage20Conf>*>(this));
    msg_dispatcher.registerHandler(SETMONITORINGBASE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetMonitoringBase20Req, SetMonitoringBase20Conf>*>(this));
    msg_dispatcher.registerHandler(SETMONITORINGLEVEL20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetMonitoringLevel20Req, SetMonitoringLevel20Conf>*>(this));
    msg_dispatcher.registerHandler(SETNETWORKPROFILE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetNetworkProfile20Req, SetNetworkProfile20Conf>*>(this));
    msg_dispatcher.registerHandler(SETVARIABLEMONITORING20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetVariableMonitoring20Req, SetVariableMonitoring20Conf>*>(this));
    msg_dispatcher.registerHandler(SETVARIABLES20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<SetVariables20Req, SetVariables20Conf>*>(this));
    msg_dispatcher.registerHandler(TRIGGERMESSAGE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<TriggerMessage20Req, TriggerMessage20Conf>*>(this));
    msg_dispatcher.registerHandler(UNLOCKCONNECTOR20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<UnlockConnector20Req, UnlockConnector20Conf>*>(this));
    msg_dispatcher.registerHandler(UNPUBLISHFIRMWARE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<UnpublishFirmware20Req, UnpublishFirmware20Conf>*>(this));
    msg_dispatcher.registerHandler(UPDATEFIRMWARE20_ACTION,
                                   *dynamic_cast<GenericMessageHandler<UpdateFirmware20Req, UpdateFirmware20Conf>*>(this));
}

/** @brief Destructor */
CentralSystemHandler20::~CentralSystemHandler20() { }

// OCPP handlers
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::CancelReservation20Req& request,
                                           ocpp::messages::ocpp20::CancelReservation20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(CANCELRESERVATION20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::CertificateSigned20Req& request,
                                           ocpp::messages::ocpp20::CertificateSigned20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(CERTIFICATESIGNED20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ChangeAvailability20Req& request,
                                           ocpp::messages::ocpp20::ChangeAvailability20Conf&      response,
                                           std::string&                                           error_code,
                                           std::string&                                           error_message)
{
    return forward(CHANGEAVAILABILITY20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ClearCache20Req& request,
                                           ocpp::messages::ocpp20::ClearCache20Conf&      response,
                                           std::string&                                   error_code,
                                           std::string&                                   error_message)
{
    return forward(CLEARCACHE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ClearChargingProfile20Req& request,
                                           ocpp::messages::ocpp20::ClearChargingProfile20Conf&      response,
                                           std::string&                                             error_code,
                                           std::string&                                             error_message)
{
    return forward(CLEARCHARGINGPROFILE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ClearDisplayMessage20Req& request,
                                           ocpp::messages::ocpp20::ClearDisplayMessage20Conf&      response,
                                           std::string&                                            error_code,
                                           std::string&                                            error_message)
{
    return forward(CLEARDISPLAYMESSAGE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ClearVariableMonitoring20Req& request,
                                           ocpp::messages::ocpp20::ClearVariableMonitoring20Conf&      response,
                                           std::string&                                                error_code,
                                           std::string&                                                error_message)
{
    return forward(CLEARVARIABLEMONITORING20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::CustomerInformation20Req& request,
                                           ocpp::messages::ocpp20::CustomerInformation20Conf&      response,
                                           std::string&                                            error_code,
                                           std::string&                                            error_message)
{
    return forward(CUSTOMERINFORMATION20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::DataTransfer20Req& request,
                                           ocpp::messages::ocpp20::DataTransfer20Conf&      response,
                                           std::string&                                     error_code,
                                           std::string&                                     error_message)
{
    return forward(DATATRANSFER20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::DeleteCertificate20Req& request,
                                           ocpp::messages::ocpp20::DeleteCertificate20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(DELETECERTIFICATE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::Get15118EVCertificate20Req& request,
                                           ocpp::messages::ocpp20::Get15118EVCertificate20Conf&      response,
                                           std::string&                                              error_code,
                                           std::string&                                              error_message)
{
    return forward(GET15118EVCERTIFICATE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetBaseReport20Req& request,
                                           ocpp::messages::ocpp20::GetBaseReport20Conf&      response,
                                           std::string&                                      error_code,
                                           std::string&                                      error_message)
{
    return forward(GETBASEREPORT20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetCertificateStatus20Req& request,
                                           ocpp::messages::ocpp20::GetCertificateStatus20Conf&      response,
                                           std::string&                                             error_code,
                                           std::string&                                             error_message)
{
    return forward(GETCERTIFICATESTATUS20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetChargingProfiles20Req& request,
                                           ocpp::messages::ocpp20::GetChargingProfiles20Conf&      response,
                                           std::string&                                            error_code,
                                           std::string&                                            error_message)
{
    return forward(GETCHARGINGPROFILES20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetCompositeSchedule20Req& request,
                                           ocpp::messages::ocpp20::GetCompositeSchedule20Conf&      response,
                                           std::string&                                             error_code,
                                           std::string&                                             error_message)
{
    return forward(GETCOMPOSITESCHEDULE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetDisplayMessages20Req& request,
                                           ocpp::messages::ocpp20::GetDisplayMessages20Conf&      response,
                                           std::string&                                           error_code,
                                           std::string&                                           error_message)
{
    return forward(GETDISPLAYMESSAGES20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetInstalledCertificateIds20Req& request,
                                           ocpp::messages::ocpp20::GetInstalledCertificateIds20Conf&      response,
                                           std::string&                                                   error_code,
                                           std::string&                                                   error_message)
{
    return forward(GETINSTALLEDCERTIFICATEIDS20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetLocalListVersion20Req& request,
                                           ocpp::messages::ocpp20::GetLocalListVersion20Conf&      response,
                                           std::string&                                            error_code,
                                           std::string&                                            error_message)
{
    return forward(GETLOCALLISTVERSION20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetLog20Req& request,
                                           ocpp::messages::ocpp20::GetLog20Conf&      response,
                                           std::string&                               error_code,
                                           std::string&                               error_message)
{
    return forward(GETLOG20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetMonitoringReport20Req& request,
                                           ocpp::messages::ocpp20::GetMonitoringReport20Conf&      response,
                                           std::string&                                            error_code,
                                           std::string&                                            error_message)
{
    return forward(GETMONITORINGREPORT20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetReport20Req& request,
                                           ocpp::messages::ocpp20::GetReport20Conf&      response,
                                           std::string&                                  error_code,
                                           std::string&                                  error_message)
{
    return forward(GETREPORT20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetTransactionStatus20Req& request,
                                           ocpp::messages::ocpp20::GetTransactionStatus20Conf&      response,
                                           std::string&                                             error_code,
                                           std::string&                                             error_message)
{
    return forward(GETTRANSACTIONSTATUS20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::GetVariables20Req& request,
                                           ocpp::messages::ocpp20::GetVariables20Conf&      response,
                                           std::string&                                     error_code,
                                           std::string&                                     error_message)
{
    return forward(GETVARIABLES20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::InstallCertificate20Req& request,
                                           ocpp::messages::ocpp20::InstallCertificate20Conf&      response,
                                           std::string&                                           error_code,
                                           std::string&                                           error_message)
{
    return forward(INSTALLCERTIFICATE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::PublishFirmware20Req& request,
                                           ocpp::messages::ocpp20::PublishFirmware20Conf&      response,
                                           std::string&                                        error_code,
                                           std::string&                                        error_message)
{
    return forward(PUBLISHFIRMWARE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::RequestStartTransaction20Req& request,
                                           ocpp::messages::ocpp20::RequestStartTransaction20Conf&      response,
                                           std::string&                                                error_code,
                                           std::string&                                                error_message)
{
    return forward(REQUESTSTARTTRANSACTION20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::RequestStopTransaction20Req& request,
                                           ocpp::messages::ocpp20::RequestStopTransaction20Conf&      response,
                                           std::string&                                               error_code,
                                           std::string&                                               error_message)
{
    return forward(REQUESTSTOPTRANSACTION20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::ReserveNow20Req& request,
                                           ocpp::messages::ocpp20::ReserveNow20Conf&      response,
                                           std::string&                                   error_code,
                                           std::string&                                   error_message)
{
    return forward(RESERVENOW20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::Reset20Req& request,
                                           ocpp::messages::ocpp20::Reset20Conf&      response,
                                           std::string&                              error_code,
                                           std::string&                              error_message)
{
    return forward(RESET20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SendLocalList20Req& request,
                                           ocpp::messages::ocpp20::SendLocalList20Conf&      response,
                                           std::string&                                      error_code,
                                           std::string&                                      error_message)
{
    return forward(SENDLOCALLIST20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetChargingProfile20Req& request,
                                           ocpp::messages::ocpp20::SetChargingProfile20Conf&      response,
                                           std::string&                                           error_code,
                                           std::string&                                           error_message)
{
    return forward(SETCHARGINGPROFILE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetDisplayMessage20Req& request,
                                           ocpp::messages::ocpp20::SetDisplayMessage20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(SETDISPLAYMESSAGE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetMonitoringBase20Req& request,
                                           ocpp::messages::ocpp20::SetMonitoringBase20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(SETMONITORINGBASE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetMonitoringLevel20Req& request,
                                           ocpp::messages::ocpp20::SetMonitoringLevel20Conf&      response,
                                           std::string&                                           error_code,
                                           std::string&                                           error_message)
{
    return forward(SETMONITORINGLEVEL20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetNetworkProfile20Req& request,
                                           ocpp::messages::ocpp20::SetNetworkProfile20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(SETNETWORKPROFILE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetVariableMonitoring20Req& request,
                                           ocpp::messages::ocpp20::SetVariableMonitoring20Conf&      response,
                                           std::string&                                              error_code,
                                           std::string&                                              error_message)
{
    return forward(SETVARIABLEMONITORING20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::SetVariables20Req& request,
                                           ocpp::messages::ocpp20::SetVariables20Conf&      response,
                                           std::string&                                     error_code,
                                           std::string&                                     error_message)
{
    return forward(SETVARIABLES20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::TriggerMessage20Req& request,
                                           ocpp::messages::ocpp20::TriggerMessage20Conf&      response,
                                           std::string&                                       error_code,
                                           std::string&                                       error_message)
{
    return forward(TRIGGERMESSAGE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::UnlockConnector20Req& request,
                                           ocpp::messages::ocpp20::UnlockConnector20Conf&      response,
                                           std::string&                                        error_code,
                                           std::string&                                        error_message)
{
    return forward(UNLOCKCONNECTOR20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::UnpublishFirmware20Req& request,
                                           ocpp::messages::ocpp20::UnpublishFirmware20Conf&      response,
                                           std::string&                                          error_code,
                                           std::string&                                          error_message)
{
    return forward(UNPUBLISHFIRMWARE20_ACTION, request, response, error_code, error_message);
}
/** @copydoc bool GenericMessageHandler<RequestType, ResponseType>::handleMessage(const RequestType& request,
     *                                                                                ResponseType& response,
     *                                                                                std::string& error_code,
     *                                                                                std::string& error_message)
     */
bool CentralSystemHandler20::handleMessage(const ocpp::messages::ocpp20::UpdateFirmware20Req& request,
                                           ocpp::messages::ocpp20::UpdateFirmware20Conf&      response,
                                           std::string&                                       error_code,
                                           std::string&                                       error_message)
{
    return forward(UPDATEFIRMWARE20_ACTION, request, response, error_code, error_message);
}

} // namespace ocpp20
} // namespace localcontroller
} // namespace ocpp