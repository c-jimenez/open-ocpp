/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/* Generated by json2cpp */

#ifndef OPENOCPP_OCPP20_ICHARGEPOINTEVENTSHANDLERCHARGEPOINT20_H
#define OPENOCPP_OCPP20_ICHARGEPOINTEVENTSHANDLERCHARGEPOINT20_H
#include "CancelReservation20.h"
#include "CertificateSigned20.h"
#include "ChangeAvailability20.h"
#include "ClearCache20.h"
#include "ClearChargingProfile20.h"
#include "ClearDisplayMessage20.h"
#include "ClearVariableMonitoring20.h"
#include "CustomerInformation20.h"
#include "DataTransfer20.h"
#include "DeleteCertificate20.h"
#include "Get15118EVCertificate20.h"
#include "GetBaseReport20.h"
#include "GetCertificateStatus20.h"
#include "GetChargingProfiles20.h"
#include "GetCompositeSchedule20.h"
#include "GetDisplayMessages20.h"
#include "GetInstalledCertificateIds20.h"
#include "GetLocalListVersion20.h"
#include "GetLog20.h"
#include "GetMonitoringReport20.h"
#include "GetReport20.h"
#include "GetTransactionStatus20.h"
#include "GetVariables20.h"
#include "InstallCertificate20.h"
#include "PublishFirmware20.h"
#include "RequestStartTransaction20.h"
#include "RequestStopTransaction20.h"
#include "ReserveNow20.h"
#include "Reset20.h"
#include "SendLocalList20.h"
#include "SetChargingProfile20.h"
#include "SetDisplayMessage20.h"
#include "SetMonitoringBase20.h"
#include "SetMonitoringLevel20.h"
#include "SetNetworkProfile20.h"
#include "SetVariableMonitoring20.h"
#include "SetVariables20.h"
#include "TriggerMessage20.h"
#include "UnlockConnector20.h"
#include "UnpublishFirmware20.h"
#include "UpdateFirmware20.h"

namespace ocpp
{
namespace chargepoint
{
namespace ocpp20
{

/** @brief Interface for charge point event handlers implementations */
class IChargePointEventsHandler20
{
  public:
    /** @brief Destructor */
    virtual ~IChargePointEventsHandler20() { }

    /** @brief Called when the first attempt to connect to the central system has failed */
    virtual void connectionFailed() = 0;

    /**
     * @brief Called when the charge point connection status has changed
     * @param isConnected true if the charge point is connected to the central system, false otherwise
     */
    virtual void connectionStateChanged(bool isConnected) = 0;

    // OCPP operations
    /**
      * @brief Called on reception of a CancelReservation20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onCancelReservation20(const ocpp::messages::ocpp20::CancelReservation20Req& request,
                                       ocpp::messages::ocpp20::CancelReservation20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a CertificateSigned20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onCertificateSigned20(const ocpp::messages::ocpp20::CertificateSigned20Req& request,
                                       ocpp::messages::ocpp20::CertificateSigned20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a ChangeAvailability20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onChangeAvailability20(const ocpp::messages::ocpp20::ChangeAvailability20Req& request,
                                        ocpp::messages::ocpp20::ChangeAvailability20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
      * @brief Called on reception of a ClearCache20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onClearCache20(const ocpp::messages::ocpp20::ClearCache20Req& request,
                                ocpp::messages::ocpp20::ClearCache20Conf&      response,
                                std::string&                                   error,
                                std::string&                                   message) = 0;
    /**
      * @brief Called on reception of a ClearChargingProfile20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onClearChargingProfile20(const ocpp::messages::ocpp20::ClearChargingProfile20Req& request,
                                          ocpp::messages::ocpp20::ClearChargingProfile20Conf&      response,
                                          std::string&                                             error,
                                          std::string&                                             message) = 0;
    /**
      * @brief Called on reception of a ClearDisplayMessage20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onClearDisplayMessage20(const ocpp::messages::ocpp20::ClearDisplayMessage20Req& request,
                                         ocpp::messages::ocpp20::ClearDisplayMessage20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
      * @brief Called on reception of a ClearVariableMonitoring20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onClearVariableMonitoring20(const ocpp::messages::ocpp20::ClearVariableMonitoring20Req& request,
                                             ocpp::messages::ocpp20::ClearVariableMonitoring20Conf&      response,
                                             std::string&                                                error,
                                             std::string&                                                message) = 0;
    /**
      * @brief Called on reception of a CustomerInformation20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onCustomerInformation20(const ocpp::messages::ocpp20::CustomerInformation20Req& request,
                                         ocpp::messages::ocpp20::CustomerInformation20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
      * @brief Called on reception of a DataTransfer20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onDataTransfer20(const ocpp::messages::ocpp20::DataTransfer20Req& request,
                                  ocpp::messages::ocpp20::DataTransfer20Conf&      response,
                                  std::string&                                     error,
                                  std::string&                                     message) = 0;
    /**
      * @brief Called on reception of a DeleteCertificate20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onDeleteCertificate20(const ocpp::messages::ocpp20::DeleteCertificate20Req& request,
                                       ocpp::messages::ocpp20::DeleteCertificate20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a Get15118EVCertificate20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGet15118EVCertificate20(const ocpp::messages::ocpp20::Get15118EVCertificate20Req& request,
                                           ocpp::messages::ocpp20::Get15118EVCertificate20Conf&      response,
                                           std::string&                                              error,
                                           std::string&                                              message) = 0;
    /**
      * @brief Called on reception of a GetBaseReport20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetBaseReport20(const ocpp::messages::ocpp20::GetBaseReport20Req& request,
                                   ocpp::messages::ocpp20::GetBaseReport20Conf&      response,
                                   std::string&                                      error,
                                   std::string&                                      message) = 0;
    /**
      * @brief Called on reception of a GetCertificateStatus20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetCertificateStatus20(const ocpp::messages::ocpp20::GetCertificateStatus20Req& request,
                                          ocpp::messages::ocpp20::GetCertificateStatus20Conf&      response,
                                          std::string&                                             error,
                                          std::string&                                             message) = 0;
    /**
      * @brief Called on reception of a GetChargingProfiles20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetChargingProfiles20(const ocpp::messages::ocpp20::GetChargingProfiles20Req& request,
                                         ocpp::messages::ocpp20::GetChargingProfiles20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
      * @brief Called on reception of a GetCompositeSchedule20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetCompositeSchedule20(const ocpp::messages::ocpp20::GetCompositeSchedule20Req& request,
                                          ocpp::messages::ocpp20::GetCompositeSchedule20Conf&      response,
                                          std::string&                                             error,
                                          std::string&                                             message) = 0;
    /**
      * @brief Called on reception of a GetDisplayMessages20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetDisplayMessages20(const ocpp::messages::ocpp20::GetDisplayMessages20Req& request,
                                        ocpp::messages::ocpp20::GetDisplayMessages20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
      * @brief Called on reception of a GetInstalledCertificateIds20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetInstalledCertificateIds20(const ocpp::messages::ocpp20::GetInstalledCertificateIds20Req& request,
                                                ocpp::messages::ocpp20::GetInstalledCertificateIds20Conf&      response,
                                                std::string&                                                   error,
                                                std::string&                                                   message) = 0;
    /**
      * @brief Called on reception of a GetLocalListVersion20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetLocalListVersion20(const ocpp::messages::ocpp20::GetLocalListVersion20Req& request,
                                         ocpp::messages::ocpp20::GetLocalListVersion20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
      * @brief Called on reception of a GetLog20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetLog20(const ocpp::messages::ocpp20::GetLog20Req& request,
                            ocpp::messages::ocpp20::GetLog20Conf&      response,
                            std::string&                               error,
                            std::string&                               message) = 0;
    /**
      * @brief Called on reception of a GetMonitoringReport20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetMonitoringReport20(const ocpp::messages::ocpp20::GetMonitoringReport20Req& request,
                                         ocpp::messages::ocpp20::GetMonitoringReport20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
      * @brief Called on reception of a GetReport20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetReport20(const ocpp::messages::ocpp20::GetReport20Req& request,
                               ocpp::messages::ocpp20::GetReport20Conf&      response,
                               std::string&                                  error,
                               std::string&                                  message) = 0;
    /**
      * @brief Called on reception of a GetTransactionStatus20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetTransactionStatus20(const ocpp::messages::ocpp20::GetTransactionStatus20Req& request,
                                          ocpp::messages::ocpp20::GetTransactionStatus20Conf&      response,
                                          std::string&                                             error,
                                          std::string&                                             message) = 0;
    /**
      * @brief Called on reception of a GetVariables20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onGetVariables20(const ocpp::messages::ocpp20::GetVariables20Req& request,
                                  ocpp::messages::ocpp20::GetVariables20Conf&      response,
                                  std::string&                                     error,
                                  std::string&                                     message) = 0;
    /**
      * @brief Called on reception of a InstallCertificate20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onInstallCertificate20(const ocpp::messages::ocpp20::InstallCertificate20Req& request,
                                        ocpp::messages::ocpp20::InstallCertificate20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
      * @brief Called on reception of a PublishFirmware20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onPublishFirmware20(const ocpp::messages::ocpp20::PublishFirmware20Req& request,
                                     ocpp::messages::ocpp20::PublishFirmware20Conf&      response,
                                     std::string&                                        error,
                                     std::string&                                        message) = 0;
    /**
      * @brief Called on reception of a RequestStartTransaction20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onRequestStartTransaction20(const ocpp::messages::ocpp20::RequestStartTransaction20Req& request,
                                             ocpp::messages::ocpp20::RequestStartTransaction20Conf&      response,
                                             std::string&                                                error,
                                             std::string&                                                message) = 0;
    /**
      * @brief Called on reception of a RequestStopTransaction20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onRequestStopTransaction20(const ocpp::messages::ocpp20::RequestStopTransaction20Req& request,
                                            ocpp::messages::ocpp20::RequestStopTransaction20Conf&      response,
                                            std::string&                                               error,
                                            std::string&                                               message) = 0;
    /**
      * @brief Called on reception of a ReserveNow20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onReserveNow20(const ocpp::messages::ocpp20::ReserveNow20Req& request,
                                ocpp::messages::ocpp20::ReserveNow20Conf&      response,
                                std::string&                                   error,
                                std::string&                                   message) = 0;
    /**
      * @brief Called on reception of a Reset20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onReset20(const ocpp::messages::ocpp20::Reset20Req& request,
                           ocpp::messages::ocpp20::Reset20Conf&      response,
                           std::string&                              error,
                           std::string&                              message) = 0;
    /**
      * @brief Called on reception of a SendLocalList20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSendLocalList20(const ocpp::messages::ocpp20::SendLocalList20Req& request,
                                   ocpp::messages::ocpp20::SendLocalList20Conf&      response,
                                   std::string&                                      error,
                                   std::string&                                      message) = 0;
    /**
      * @brief Called on reception of a SetChargingProfile20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetChargingProfile20(const ocpp::messages::ocpp20::SetChargingProfile20Req& request,
                                        ocpp::messages::ocpp20::SetChargingProfile20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
      * @brief Called on reception of a SetDisplayMessage20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetDisplayMessage20(const ocpp::messages::ocpp20::SetDisplayMessage20Req& request,
                                       ocpp::messages::ocpp20::SetDisplayMessage20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a SetMonitoringBase20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetMonitoringBase20(const ocpp::messages::ocpp20::SetMonitoringBase20Req& request,
                                       ocpp::messages::ocpp20::SetMonitoringBase20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a SetMonitoringLevel20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetMonitoringLevel20(const ocpp::messages::ocpp20::SetMonitoringLevel20Req& request,
                                        ocpp::messages::ocpp20::SetMonitoringLevel20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
      * @brief Called on reception of a SetNetworkProfile20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetNetworkProfile20(const ocpp::messages::ocpp20::SetNetworkProfile20Req& request,
                                       ocpp::messages::ocpp20::SetNetworkProfile20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a SetVariableMonitoring20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetVariableMonitoring20(const ocpp::messages::ocpp20::SetVariableMonitoring20Req& request,
                                           ocpp::messages::ocpp20::SetVariableMonitoring20Conf&      response,
                                           std::string&                                              error,
                                           std::string&                                              message) = 0;
    /**
      * @brief Called on reception of a SetVariables20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onSetVariables20(const ocpp::messages::ocpp20::SetVariables20Req& request,
                                  ocpp::messages::ocpp20::SetVariables20Conf&      response,
                                  std::string&                                     error,
                                  std::string&                                     message) = 0;
    /**
      * @brief Called on reception of a TriggerMessage20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onTriggerMessage20(const ocpp::messages::ocpp20::TriggerMessage20Req& request,
                                    ocpp::messages::ocpp20::TriggerMessage20Conf&      response,
                                    std::string&                                       error,
                                    std::string&                                       message) = 0;
    /**
      * @brief Called on reception of a UnlockConnector20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onUnlockConnector20(const ocpp::messages::ocpp20::UnlockConnector20Req& request,
                                     ocpp::messages::ocpp20::UnlockConnector20Conf&      response,
                                     std::string&                                        error,
                                     std::string&                                        message) = 0;
    /**
      * @brief Called on reception of a UnpublishFirmware20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onUnpublishFirmware20(const ocpp::messages::ocpp20::UnpublishFirmware20Req& request,
                                       ocpp::messages::ocpp20::UnpublishFirmware20Conf&      response,
                                       std::string&                                          error,
                                       std::string&                                          message) = 0;
    /**
      * @brief Called on reception of a UpdateFirmware20 message from the central system
      * @param request Request received
      * @param response Response to send
      * @param error Error (Empty if not a CallError)
      * @param message Error message (Empty if not a CallError)
      * @return true if the request has been sent and a response has been received, false otherwise
      */
    virtual bool onUpdateFirmware20(const ocpp::messages::ocpp20::UpdateFirmware20Req& request,
                                    ocpp::messages::ocpp20::UpdateFirmware20Conf&      response,
                                    std::string&                                       error,
                                    std::string&                                       message) = 0;
};

} // namespace ocpp20
} // namespace chargepoint
} // namespace ocpp

#endif // OPENOCPP_OCPP20_ICHARGEPOINTEVENTSHANDLERCHARGEPOINT20_H