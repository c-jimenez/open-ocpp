/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:SignCertificateRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_SIGNCERTIFICATE_H
#define OPENOCPP_SIGNCERTIFICATE_H

#include "IMessageConverter.h"

#include "CertificateSigningUseEnumType.h"
#include "CustomDataType.h"
#include "GenericStatusEnumType.h"
#include "StatusInfoType.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the SignCertificate messages */
static const std::string SIGNCERTIFICATE_ACTION = "SignCertificate";

/** @brief SignCertificateReq message */
struct SignCertificateReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief The Charging Station SHALL send the public key in form of a Certificate Signing Request (CSR) as described in RFC 2986 [22] and then PEM encoded, using the &lt;&lt;signcertificaterequest,SignCertificateRequest&gt;&gt; message. */
    ocpp::types::CiStringType<5500u> csr;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CertificateSigningUseEnumType> certificateType;
};

/** @brief SignCertificateConf message */
struct SignCertificateConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::GenericStatusEnumType status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType> statusInfo;
};

// Message converters
MESSAGE_CONVERTERS(SignCertificate)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_SIGNCERTIFICATE_H