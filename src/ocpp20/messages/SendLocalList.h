/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:SendLocalListRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_SENDLOCALLIST_H
#define OPENOCPP_SENDLOCALLIST_H

#include "IMessageConverter.h"

#include "AuthorizationData.h"
#include "CustomDataType.h"
#include "SendLocalListStatusEnumType.h"
#include "StatusInfoType.h"
#include "UpdateEnumType.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the SendLocalList messages */
static const std::string SENDLOCALLIST_ACTION = "SendLocalList";

/** @brief SendLocalListReq message */
struct SendLocalListReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    std::vector<ocpp::types::ocpp20::AuthorizationData> localAuthorizationList;
    /** @brief In case of a full update this is the version number of the full list. In case of a differential update it is the version number of the list after the update has been applied. */
    int versionNumber;
    /** @brief  */
    ocpp::types::ocpp20::UpdateEnumType updateType;
};

/** @brief SendLocalListConf message */
struct SendLocalListConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::SendLocalListStatusEnumType status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType> statusInfo;
};

// Message converters
MESSAGE_CONVERTERS(SendLocalList)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_SENDLOCALLIST_H