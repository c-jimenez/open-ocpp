/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:PublishFirmwareRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_PUBLISHFIRMWARE_H
#define OPENOCPP_PUBLISHFIRMWARE_H

#include "IMessageConverter.h"

#include "CustomDataType.h"
#include "GenericStatusEnumType.h"
#include "StatusInfoType.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the PublishFirmware messages */
static const std::string PUBLISHFIRMWARE_ACTION = "PublishFirmware";

/** @brief PublishFirmwareReq message */
struct PublishFirmwareReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief This contains a string containing a URI pointing to a
location from which to retrieve the firmware. */
    ocpp::types::CiStringType<512u> location;
    /** @brief This specifies how many times Charging Station must try
to download the firmware before giving up. If this field is not
present, it is left to Charging Station to decide how many times it wants to retry. */
    ocpp::types::Optional<int> retries;
    /** @brief The MD5 checksum over the entire firmware file as a hexadecimal string of length 32. */
    ocpp::types::CiStringType<32u> checksum;
    /** @brief The Id of the request. */
    int requestId;
    /** @brief The interval in seconds
after which a retry may be
attempted. If this field is not
present, it is left to Charging
Station to decide how long to wait
between attempts. */
    ocpp::types::Optional<int> retryInterval;
};

/** @brief PublishFirmwareConf message */
struct PublishFirmwareConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::GenericStatusEnumType status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType> statusInfo;
};

// Message converters
MESSAGE_CONVERTERS(PublishFirmware)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_PUBLISHFIRMWARE_H