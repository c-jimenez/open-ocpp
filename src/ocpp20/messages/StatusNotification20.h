/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:StatusNotificationRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_STATUSNOTIFICATION20_H
#define OPENOCPP_STATUSNOTIFICATION20_H

#include "IMessageConverter.h"

#include "ConnectorStatusEnumType20.h"
#include "CustomDataType20.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the StatusNotification20 messages */
static const std::string STATUSNOTIFICATION20_ACTION = "StatusNotification";

/** @brief StatusNotification20Req message */
struct StatusNotification20Req
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
    /** @brief The time for which the status is reported. If absent time of receipt of the message will be assumed. */
    ocpp::types::DateTime timestamp;
    /** @brief  */
    ocpp::types::ocpp20::ConnectorStatusEnumType20 connectorStatus;
    /** @brief The id of the EVSE to which the connector belongs for which the the status is reported. */
    int evseId;
    /** @brief The id of the connector within the EVSE for which the status is reported. */
    int connectorId;
};

/** @brief StatusNotification20Conf message */
struct StatusNotification20Conf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
};

// Message converters
MESSAGE_CONVERTERS(StatusNotification20)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_STATUSNOTIFICATION20_H