/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:RequestStartTransactionRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_REQUESTSTARTTRANSACTION20_H
#define OPENOCPP_REQUESTSTARTTRANSACTION20_H

#include "IMessageConverter.h"

#include "ChargingProfileType20.h"
#include "CustomDataType20.h"
#include "IdTokenType20.h"
#include "RequestStartStopStatusEnumType20.h"
#include "StatusInfoType20.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the RequestStartTransaction20 messages */
static const std::string REQUESTSTARTTRANSACTION20_ACTION = "RequestStartTransaction";

/** @brief RequestStartTransaction20Req message */
struct RequestStartTransaction20Req
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
    /** @brief Number of the EVSE on which to start the transaction. EvseId SHALL be &gt; 0 */
    ocpp::types::Optional<int> evseId;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::IdTokenType20> groupIdToken;
    /** @brief  */
    ocpp::types::ocpp20::IdTokenType20 idToken;
    /** @brief Id given by the server to this start request. The Charging Station might return this in the &lt;&lt;transactioneventrequest, TransactionEventRequest&gt;&gt;, letting the server know which transaction was started for this request. Use to start a transaction. */
    int remoteStartId;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::ChargingProfileType20> chargingProfile;
};

/** @brief RequestStartTransaction20Conf message */
struct RequestStartTransaction20Conf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
    /** @brief  */
    ocpp::types::ocpp20::RequestStartStopStatusEnumType20 status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType20> statusInfo;
    /** @brief When the transaction was already started by the Charging Station before the RequestStartTransactionRequest was received, for example: cable plugged in first. This contains the transactionId of the already started transaction. */
    ocpp::types::Optional<ocpp::types::CiStringType<36u>> transactionId;
};

// Message converters
MESSAGE_CONVERTERS(RequestStartTransaction20)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_REQUESTSTARTTRANSACTION20_H