/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:Get15118EVCertificateRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_OCPP20_GET15118EVCERTIFICATE_H
#define OPENOCPP_OCPP20_GET15118EVCERTIFICATE_H

#include "IMessageConverter.h"

#include "CertificateActionEnumType20.h"
#include "CustomDataType20.h"
#include "Iso15118EVCertificateStatusEnumType20.h"
#include "StatusInfoType20.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the Get15118EVCertificate messages */
static const std::string GET15118EVCERTIFICATE_ACTION = "Get15118EVCertificate";

/** @brief Get15118EVCertificateReq message */
struct Get15118EVCertificateReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief Schema version currently used for the 15118 session between EV and Charging Station. Needed for parsing of the EXI stream by the CSMS. */
    ocpp::types::CiStringType<50u> iso15118SchemaVersion;
    /** @brief  */
    ocpp::types::ocpp20::CertificateActionEnumType action;
    /** @brief Raw CertificateInstallationReq request from EV, Base64 encoded. */
    ocpp::types::CiStringType<5600u> exiRequest;
};

/** @brief Get15118EVCertificateConf message */
struct Get15118EVCertificateConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::Iso15118EVCertificateStatusEnumType status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType> statusInfo;
    /** @brief Raw CertificateInstallationRes response for the EV, Base64 encoded. */
    ocpp::types::CiStringType<5600u> exiResponse;
};

// Message converters
MESSAGE_CONVERTERS(Get15118EVCertificate)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_OCPP20_GET15118EVCERTIFICATE_H