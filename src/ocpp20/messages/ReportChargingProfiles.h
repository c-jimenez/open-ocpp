/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:ReportChargingProfilesRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_REPORTCHARGINGPROFILES_H
#define OPENOCPP_REPORTCHARGINGPROFILES_H

#include "IMessageConverter.h"

#include "CustomDataType.h"
#include "ChargingLimitSourceEnumType.h"
#include "ChargingProfileType.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the ReportChargingProfiles messages */
static const std::string REPORTCHARGINGPROFILES_ACTION = "ReportChargingProfiles";

/** @brief ReportChargingProfilesReq message */
struct ReportChargingProfilesReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief Id used to match the &lt;&lt;getchargingprofilesrequest, GetChargingProfilesRequest&gt;&gt; message with the resulting ReportChargingProfilesRequest messages. When the CSMS provided a requestId in the &lt;&lt;getchargingprofilesrequest, GetChargingProfilesRequest&gt;&gt;, this field SHALL contain the same value. */
    int requestId;
    /** @brief  */
    ocpp::types::ocpp20::ChargingLimitSourceEnumType chargingLimitSource;
    /** @brief  */
    std::vector<ocpp::types::ocpp20::ChargingProfileType> chargingProfile;
    /** @brief To Be Continued. Default value when omitted: false. false indicates that there are no further messages as part of this report. */
    ocpp::types::Optional<bool> tbc;
    /** @brief The evse to which the charging profile applies. If evseId = 0, the message contains an overall limit for the Charging Station. */
    int evseId;
};

/** @brief ReportChargingProfilesConf message */
struct ReportChargingProfilesConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
};

// Message converters
MESSAGE_CONVERTERS(ReportChargingProfiles)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_REPORTCHARGINGPROFILES_H