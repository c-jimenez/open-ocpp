/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:AuthorizeRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_OCPP20_AUTHORIZE_H
#define OPENOCPP_OCPP20_AUTHORIZE_H

#include "IMessageConverter.h"

#include "AuthorizeCertificateStatusEnumType20.h"
#include "CustomDataType20.h"
#include "IdTokenInfoType20.h"
#include "IdTokenType20.h"
#include "OCSPRequestDataType20.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the Authorize messages */
static const std::string AUTHORIZE_ACTION = "Authorize";

/** @brief AuthorizeReq message */
struct AuthorizeReq
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::IdTokenType idToken;
    /** @brief The X.509 certificated presented by EV and encoded in PEM format. */
    ocpp::types::Optional<ocpp::types::CiStringType<5500u>> certificate;
    /** @brief  */
    std::vector<ocpp::types::ocpp20::OCSPRequestDataType> iso15118CertificateHashData;
};

/** @brief AuthorizeConf message */
struct AuthorizeConf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType> customData;
    /** @brief  */
    ocpp::types::ocpp20::IdTokenInfoType idTokenInfo;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::AuthorizeCertificateStatusEnumType> certificateStatus;
};

// Message converters
MESSAGE_CONVERTERS(Authorize)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_OCPP20_AUTHORIZE_H