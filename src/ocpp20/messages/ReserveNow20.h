/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/*
    Generated by json2cpp from : urn:OCPP:Cp:2:2020:3:ReserveNowRequest
                                 OCPP 2.0.1 FINAL
*/

#ifndef OPENOCPP_RESERVENOW20_H
#define OPENOCPP_RESERVENOW20_H

#include "IMessageConverter.h"

#include "ConnectorEnumType20.h"
#include "CustomDataType20.h"
#include "IdTokenType20.h"
#include "ReserveNowStatusEnumType20.h"
#include "StatusInfoType20.h"

namespace ocpp
{
namespace messages
{
namespace ocpp20
{

/** @brief Action corresponding to the ReserveNow20 messages */
static const std::string RESERVENOW20_ACTION = "ReserveNow";

/** @brief ReserveNow20Req message */
struct ReserveNow20Req
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
    /** @brief Id of reservation. */
    int id;
    /** @brief Date and time at which the reservation expires. */
    ocpp::types::DateTime expiryDateTime;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::ConnectorEnumType20> connectorType;
    /** @brief  */
    ocpp::types::ocpp20::IdTokenType20 idToken;
    /** @brief This contains ID of the evse to be reserved. */
    ocpp::types::Optional<int> evseId;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::IdTokenType20> groupIdToken;
};

/** @brief ReserveNow20Conf message */
struct ReserveNow20Conf
{
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::CustomDataType20> customData;
    /** @brief  */
    ocpp::types::ocpp20::ReserveNowStatusEnumType20 status;
    /** @brief  */
    ocpp::types::Optional<ocpp::types::ocpp20::StatusInfoType20> statusInfo;
};

// Message converters
MESSAGE_CONVERTERS(ReserveNow20)

} // namespace ocpp20
} // namespace messages
} // namespace ocpp

#endif // OPENOCPP_RESERVENOW20_H