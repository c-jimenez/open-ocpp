/*
Copyright (c) 2020 Cedric Jimenez
This file is part of OpenOCPP.

OpenOCPP is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

OpenOCPP is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OpenOCPP. If not, see <http://www.gnu.org/licenses/>.
*/

/* Generated by json2cpp */

#ifndef OPENOCPP_OCPP20_ICHARGEPOINTREQUESTHANDLER20_H
#define OPENOCPP_OCPP20_ICHARGEPOINTREQUESTHANDLER20_H
#include "Authorize20.h"
#include "BootNotification20.h"
#include "ClearedChargingLimit20.h"
#include "CostUpdated20.h"
#include "DataTransfer20.h"
#include "FirmwareStatusNotification20.h"
#include "Heartbeat20.h"
#include "LogStatusNotification20.h"
#include "MeterValues20.h"
#include "NotifyChargingLimit20.h"
#include "NotifyCustomerInformation20.h"
#include "NotifyDisplayMessages20.h"
#include "NotifyEVChargingNeeds20.h"
#include "NotifyEVChargingSchedule20.h"
#include "NotifyEvent20.h"
#include "NotifyMonitoringReport20.h"
#include "NotifyReport20.h"
#include "PublishFirmwareStatusNotification20.h"
#include "ReportChargingProfiles20.h"
#include "ReservationStatusUpdate20.h"
#include "SecurityEventNotification20.h"
#include "SignCertificate20.h"
#include "StatusNotification20.h"
#include "TransactionEvent20.h"

#include <vector>

namespace ocpp
{
namespace centralsystem
{
namespace ocpp20
{

/** @brief Interface for charge point requests implementations */
class IChargePointRequestHandler20
{
  public:
    /** @brief Destructor */
    virtual ~IChargePointRequestHandler20() { }

    /** @brief Called to notify the disconnection of the charge point */
    virtual void disconnected() = 0;
    /**
     * @brief Called on reception of a BootNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onBootNotification20(const ocpp::messages::ocpp20::BootNotification20Req& request,
                                      ocpp::messages::ocpp20::BootNotification20Conf&      response,
                                      std::string&                                         error,
                                      std::string&                                         message) = 0;
    /**
     * @brief Called on reception of a Authorize20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onAuthorize20(const ocpp::messages::ocpp20::Authorize20Req& request,
                               ocpp::messages::ocpp20::Authorize20Conf&      response,
                               std::string&                                  error,
                               std::string&                                  message) = 0;
    /**
     * @brief Called on reception of a ClearedChargingLimit20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onClearedChargingLimit20(const ocpp::messages::ocpp20::ClearedChargingLimit20Req& request,
                                          ocpp::messages::ocpp20::ClearedChargingLimit20Conf&      response,
                                          std::string&                                             error,
                                          std::string&                                             message) = 0;
    /**
     * @brief Called on reception of a CostUpdated20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onCostUpdated20(const ocpp::messages::ocpp20::CostUpdated20Req& request,
                                 ocpp::messages::ocpp20::CostUpdated20Conf&      response,
                                 std::string&                                    error,
                                 std::string&                                    message) = 0;
    /**
     * @brief Called on reception of a DataTransfer20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onDataTransfer20(const ocpp::messages::ocpp20::DataTransfer20Req& request,
                                  ocpp::messages::ocpp20::DataTransfer20Conf&      response,
                                  std::string&                                     error,
                                  std::string&                                     message) = 0;
    /**
     * @brief Called on reception of a FirmwareStatusNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onFirmwareStatusNotification20(const ocpp::messages::ocpp20::FirmwareStatusNotification20Req& request,
                                                ocpp::messages::ocpp20::FirmwareStatusNotification20Conf&      response,
                                                std::string&                                                   error,
                                                std::string&                                                   message) = 0;
    /**
     * @brief Called on reception of a Heartbeat20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onHeartbeat20(const ocpp::messages::ocpp20::Heartbeat20Req& request,
                               ocpp::messages::ocpp20::Heartbeat20Conf&      response,
                               std::string&                                  error,
                               std::string&                                  message) = 0;
    /**
     * @brief Called on reception of a LogStatusNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onLogStatusNotification20(const ocpp::messages::ocpp20::LogStatusNotification20Req& request,
                                           ocpp::messages::ocpp20::LogStatusNotification20Conf&      response,
                                           std::string&                                              error,
                                           std::string&                                              message) = 0;
    /**
     * @brief Called on reception of a MeterValues20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onMeterValues20(const ocpp::messages::ocpp20::MeterValues20Req& request,
                                 ocpp::messages::ocpp20::MeterValues20Conf&      response,
                                 std::string&                                    error,
                                 std::string&                                    message) = 0;
    /**
     * @brief Called on reception of a NotifyChargingLimit20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyChargingLimit20(const ocpp::messages::ocpp20::NotifyChargingLimit20Req& request,
                                         ocpp::messages::ocpp20::NotifyChargingLimit20Conf&      response,
                                         std::string&                                            error,
                                         std::string&                                            message) = 0;
    /**
     * @brief Called on reception of a NotifyCustomerInformation20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyCustomerInformation20(const ocpp::messages::ocpp20::NotifyCustomerInformation20Req& request,
                                               ocpp::messages::ocpp20::NotifyCustomerInformation20Conf&      response,
                                               std::string&                                                  error,
                                               std::string&                                                  message) = 0;
    /**
     * @brief Called on reception of a NotifyDisplayMessages20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyDisplayMessages20(const ocpp::messages::ocpp20::NotifyDisplayMessages20Req& request,
                                           ocpp::messages::ocpp20::NotifyDisplayMessages20Conf&      response,
                                           std::string&                                              error,
                                           std::string&                                              message) = 0;
    /**
     * @brief Called on reception of a NotifyEVChargingNeeds20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyEVChargingNeeds20(const ocpp::messages::ocpp20::NotifyEVChargingNeeds20Req& request,
                                           ocpp::messages::ocpp20::NotifyEVChargingNeeds20Conf&      response,
                                           std::string&                                              error,
                                           std::string&                                              message) = 0;
    /**
     * @brief Called on reception of a NotifyEVChargingSchedule20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyEVChargingSchedule20(const ocpp::messages::ocpp20::NotifyEVChargingSchedule20Req& request,
                                              ocpp::messages::ocpp20::NotifyEVChargingSchedule20Conf&      response,
                                              std::string&                                                 error,
                                              std::string&                                                 message) = 0;
    /**
     * @brief Called on reception of a NotifyEvent20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyEvent20(const ocpp::messages::ocpp20::NotifyEvent20Req& request,
                                 ocpp::messages::ocpp20::NotifyEvent20Conf&      response,
                                 std::string&                                    error,
                                 std::string&                                    message) = 0;
    /**
     * @brief Called on reception of a NotifyMonitoringReport20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyMonitoringReport20(const ocpp::messages::ocpp20::NotifyMonitoringReport20Req& request,
                                            ocpp::messages::ocpp20::NotifyMonitoringReport20Conf&      response,
                                            std::string&                                               error,
                                            std::string&                                               message) = 0;
    /**
     * @brief Called on reception of a NotifyReport20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onNotifyReport20(const ocpp::messages::ocpp20::NotifyReport20Req& request,
                                  ocpp::messages::ocpp20::NotifyReport20Conf&      response,
                                  std::string&                                     error,
                                  std::string&                                     message) = 0;
    /**
     * @brief Called on reception of a PublishFirmwareStatusNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onPublishFirmwareStatusNotification20(const ocpp::messages::ocpp20::PublishFirmwareStatusNotification20Req& request,
                                                       ocpp::messages::ocpp20::PublishFirmwareStatusNotification20Conf&      response,
                                                       std::string&                                                          error,
                                                       std::string&                                                          message) = 0;
    /**
     * @brief Called on reception of a ReportChargingProfiles20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onReportChargingProfiles20(const ocpp::messages::ocpp20::ReportChargingProfiles20Req& request,
                                            ocpp::messages::ocpp20::ReportChargingProfiles20Conf&      response,
                                            std::string&                                               error,
                                            std::string&                                               message) = 0;
    /**
     * @brief Called on reception of a ReservationStatusUpdate20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onReservationStatusUpdate20(const ocpp::messages::ocpp20::ReservationStatusUpdate20Req& request,
                                             ocpp::messages::ocpp20::ReservationStatusUpdate20Conf&      response,
                                             std::string&                                                error,
                                             std::string&                                                message) = 0;
    /**
     * @brief Called on reception of a SecurityEventNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onSecurityEventNotification20(const ocpp::messages::ocpp20::SecurityEventNotification20Req& request,
                                               ocpp::messages::ocpp20::SecurityEventNotification20Conf&      response,
                                               std::string&                                                  error,
                                               std::string&                                                  message) = 0;
    /**
     * @brief Called on reception of a SignCertificate20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onSignCertificate20(const ocpp::messages::ocpp20::SignCertificate20Req& request,
                                     ocpp::messages::ocpp20::SignCertificate20Conf&      response,
                                     std::string&                                        error,
                                     std::string&                                        message) = 0;
    /**
     * @brief Called on reception of a StatusNotification20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onStatusNotification20(const ocpp::messages::ocpp20::StatusNotification20Req& request,
                                        ocpp::messages::ocpp20::StatusNotification20Conf&      response,
                                        std::string&                                           error,
                                        std::string&                                           message) = 0;
    /**
     * @brief Called on reception of a TransactionEvent20 request from the charge point
     * @param request Request received
     * @param response Response to send
     * @param error Error (Empty if not a CallError)
     * @param message Error message (Empty if not a CallError)
     * @return true if the request has been handled and a response must be sent, false otherwise
     */
    virtual bool onTransactionEvent20(const ocpp::messages::ocpp20::TransactionEvent20Req& request,
                                      ocpp::messages::ocpp20::TransactionEvent20Conf&      response,
                                      std::string&                                         error,
                                      std::string&                                         message) = 0;
};

} // namespace ocpp20
} // namespace centralsystem
} // namespace ocpp

#endif // OPENOCPP_OCPP20_ICHARGEPOINTREQUESTHANDLER20_H