{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "urn:OCPP:Cp:2:2020:3:ReportChargingProfilesRequest",
  "comment": "OCPP 2.0.1 FINAL",
  "definitions": {
    "CustomDataType": {
      "description": "This class does not get 'AdditionalProperties = false' in the schema generation, so it can be extended with arbitrary JSON properties to allow adding custom data.",
      "javaType": "CustomData",
      "type": "object",
      "properties": {
        "vendorId": {
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "vendorId"
      ]
    },
    "ChargingLimitSourceEnumType": {
      "description": "Source that has installed this charging profile.\r\n",
      "javaType": "ChargingLimitSourceEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "EMS",
        "Other",
        "SO",
        "CSO"
      ]
    },
    "ChargingProfileKindEnumType": {
      "description": "Charging_ Profile. Charging_ Profile_ Kind. Charging_ Profile_ Kind_ Code\r\nurn:x-oca:ocpp:uid:1:569232\r\nIndicates the kind of schedule.\r\n",
      "javaType": "ChargingProfileKindEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "Absolute",
        "Recurring",
        "Relative"
      ]
    },
    "ChargingProfilePurposeEnumType": {
      "description": "Charging_ Profile. Charging_ Profile_ Purpose. Charging_ Profile_ Purpose_ Code\r\nurn:x-oca:ocpp:uid:1:569231\r\nDefines the purpose of the schedule transferred by this profile\r\n",
      "javaType": "ChargingProfilePurposeEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "ChargingStationExternalConstraints",
        "ChargingStationMaxProfile",
        "TxDefaultProfile",
        "TxProfile"
      ]
    },
    "ChargingRateUnitEnumType": {
      "description": "Charging_ Schedule. Charging_ Rate_ Unit. Charging_ Rate_ Unit_ Code\r\nurn:x-oca:ocpp:uid:1:569238\r\nThe unit of measure Limit is expressed in.\r\n",
      "javaType": "ChargingRateUnitEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "W",
        "A"
      ]
    },
    "CostKindEnumType": {
      "description": "Cost. Cost_ Kind. Cost_ Kind_ Code\r\nurn:x-oca:ocpp:uid:1:569243\r\nThe kind of cost referred to in the message element amount\r\n",
      "javaType": "CostKindEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "CarbonDioxideEmission",
        "RelativePricePercentage",
        "RenewableGenerationPercentage"
      ]
    },
    "RecurrencyKindEnumType": {
      "description": "Charging_ Profile. Recurrency_ Kind. Recurrency_ Kind_ Code\r\nurn:x-oca:ocpp:uid:1:569233\r\nIndicates the start point of a recurrence.\r\n",
      "javaType": "RecurrencyKindEnum",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "Daily",
        "Weekly"
      ]
    },
    "ChargingProfileType": {
      "description": "Charging_ Profile\r\nurn:x-oca:ocpp:uid:2:233255\r\nA ChargingProfile consists of ChargingSchedule, describing the amount of power or current that can be delivered per time interval.\r\n",
      "javaType": "ChargingProfile",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "id": {
          "description": "Identified_ Object. MRID. Numeric_ Identifier\r\nurn:x-enexis:ecdm:uid:1:569198\r\nId of ChargingProfile.\r\n",
          "type": "integer"
        },
        "stackLevel": {
          "description": "Charging_ Profile. Stack_ Level. Counter\r\nurn:x-oca:ocpp:uid:1:569230\r\nValue determining level in hierarchy stack of profiles. Higher values have precedence over lower values. Lowest level is 0.\r\n",
          "type": "integer"
        },
        "chargingProfilePurpose": {
          "$ref": "#/definitions/ChargingProfilePurposeEnumType"
        },
        "chargingProfileKind": {
          "$ref": "#/definitions/ChargingProfileKindEnumType"
        },
        "recurrencyKind": {
          "$ref": "#/definitions/RecurrencyKindEnumType"
        },
        "validFrom": {
          "description": "Charging_ Profile. Valid_ From. Date_ Time\r\nurn:x-oca:ocpp:uid:1:569234\r\nPoint in time at which the profile starts to be valid. If absent, the profile is valid as soon as it is received by the Charging Station.\r\n",
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "description": "Charging_ Profile. Valid_ To. Date_ Time\r\nurn:x-oca:ocpp:uid:1:569235\r\nPoint in time at which the profile stops to be valid. If absent, the profile is valid until it is replaced by another profile.\r\n",
          "type": "string",
          "format": "date-time"
        },
        "chargingSchedule": {
          "type": "array",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/ChargingScheduleType"
          },
          "minItems": 1,
          "maxItems": 3
        },
        "transactionId": {
          "description": "SHALL only be included if ChargingProfilePurpose is set to TxProfile. The transactionId is used to match the profile to a specific transaction.\r\n",
          "type": "string",
          "maxLength": 36
        }
      },
      "required": [
        "id",
        "stackLevel",
        "chargingProfilePurpose",
        "chargingProfileKind",
        "chargingSchedule"
      ]
    },
    "ChargingSchedulePeriodType": {
      "description": "Charging_ Schedule_ Period\r\nurn:x-oca:ocpp:uid:2:233257\r\nCharging schedule period structure defines a time period in a charging schedule.\r\n",
      "javaType": "ChargingSchedulePeriod",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "startPeriod": {
          "description": "Charging_ Schedule_ Period. Start_ Period. Elapsed_ Time\r\nurn:x-oca:ocpp:uid:1:569240\r\nStart of the period, in seconds from the start of schedule. The value of StartPeriod also defines the stop time of the previous period.\r\n",
          "type": "integer"
        },
        "limit": {
          "description": "Charging_ Schedule_ Period. Limit. Measure\r\nurn:x-oca:ocpp:uid:1:569241\r\nCharging rate limit during the schedule period, in the applicable chargingRateUnit, for example in Amperes (A) or Watts (W). Accepts at most one digit fraction (e.g. 8.1).\r\n",
          "type": "number"
        },
        "numberPhases": {
          "description": "Charging_ Schedule_ Period. Number_ Phases. Counter\r\nurn:x-oca:ocpp:uid:1:569242\r\nThe number of phases that can be used for charging. If a number of phases is needed, numberPhases=3 will be assumed unless another number is given.\r\n",
          "type": "integer"
        },
        "phaseToUse": {
          "description": "Values: 1..3, Used if numberPhases=1 and if the EVSE is capable of switching the phase connected to the EV, i.e. ACPhaseSwitchingSupported is defined and true. Itâ€™s not allowed unless both conditions above are true. If both conditions are true, and phaseToUse is omitted, the Charging Station / EVSE will make the selection on its own.\r\n\r\n",
          "type": "integer"
        }
      },
      "required": [
        "startPeriod",
        "limit"
      ]
    },
    "ChargingScheduleType": {
      "description": "Charging_ Schedule\r\nurn:x-oca:ocpp:uid:2:233256\r\nCharging schedule structure defines a list of charging periods, as used in: GetCompositeSchedule.conf and ChargingProfile. \r\n",
      "javaType": "ChargingSchedule",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "id": {
          "description": "Identifies the ChargingSchedule.\r\n",
          "type": "integer"
        },
        "startSchedule": {
          "description": "Charging_ Schedule. Start_ Schedule. Date_ Time\r\nurn:x-oca:ocpp:uid:1:569237\r\nStarting point of an absolute schedule. If absent the schedule will be relative to start of charging.\r\n",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Charging_ Schedule. Duration. Elapsed_ Time\r\nurn:x-oca:ocpp:uid:1:569236\r\nDuration of the charging schedule in seconds. If the duration is left empty, the last period will continue indefinitely or until end of the transaction if chargingProfilePurpose = TxProfile.\r\n",
          "type": "integer"
        },
        "chargingRateUnit": {
          "$ref": "#/definitions/ChargingRateUnitEnumType"
        },
        "chargingSchedulePeriod": {
          "type": "array",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/ChargingSchedulePeriodType"
          },
          "minItems": 1,
          "maxItems": 1024
        },
        "minChargingRate": {
          "description": "Charging_ Schedule. Min_ Charging_ Rate. Numeric\r\nurn:x-oca:ocpp:uid:1:569239\r\nMinimum charging rate supported by the EV. The unit of measure is defined by the chargingRateUnit. This parameter is intended to be used by a local smart charging algorithm to optimize the power allocation for in the case a charging process is inefficient at lower charging rates. Accepts at most one digit fraction (e.g. 8.1)\r\n",
          "type": "number"
        },
        "salesTariff": {
          "$ref": "#/definitions/SalesTariffType"
        }
      },
      "required": [
        "id",
        "chargingRateUnit",
        "chargingSchedulePeriod"
      ]
    },
    "ConsumptionCostType": {
      "description": "Consumption_ Cost\r\nurn:x-oca:ocpp:uid:2:233259\r\n",
      "javaType": "ConsumptionCost",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "startValue": {
          "description": "Consumption_ Cost. Start_ Value. Numeric\r\nurn:x-oca:ocpp:uid:1:569246\r\nThe lowest level of consumption that defines the starting point of this consumption block. The block interval extends to the start of the next interval.\r\n",
          "type": "number"
        },
        "cost": {
          "type": "array",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/CostType"
          },
          "minItems": 1,
          "maxItems": 3
        }
      },
      "required": [
        "startValue",
        "cost"
      ]
    },
    "CostType": {
      "description": "Cost\r\nurn:x-oca:ocpp:uid:2:233258\r\n",
      "javaType": "Cost",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "costKind": {
          "$ref": "#/definitions/CostKindEnumType"
        },
        "amount": {
          "description": "Cost. Amount. Amount\r\nurn:x-oca:ocpp:uid:1:569244\r\nThe estimated or actual cost per kWh\r\n",
          "type": "integer"
        },
        "amountMultiplier": {
          "description": "Cost. Amount_ Multiplier. Integer\r\nurn:x-oca:ocpp:uid:1:569245\r\nValues: -3..3, The amountMultiplier defines the exponent to base 10 (dec). The final value is determined by: amount * 10 ^ amountMultiplier\r\n",
          "type": "integer"
        }
      },
      "required": [
        "costKind",
        "amount"
      ]
    },
    "RelativeTimeIntervalType": {
      "description": "Relative_ Timer_ Interval\r\nurn:x-oca:ocpp:uid:2:233270\r\n",
      "javaType": "RelativeTimeInterval",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "start": {
          "description": "Relative_ Timer_ Interval. Start. Elapsed_ Time\r\nurn:x-oca:ocpp:uid:1:569279\r\nStart of the interval, in seconds from NOW.\r\n",
          "type": "integer"
        },
        "duration": {
          "description": "Relative_ Timer_ Interval. Duration. Elapsed_ Time\r\nurn:x-oca:ocpp:uid:1:569280\r\nDuration of the interval, in seconds.\r\n",
          "type": "integer"
        }
      },
      "required": [
        "start"
      ]
    },
    "SalesTariffEntryType": {
      "description": "Sales_ Tariff_ Entry\r\nurn:x-oca:ocpp:uid:2:233271\r\n",
      "javaType": "SalesTariffEntry",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "relativeTimeInterval": {
          "$ref": "#/definitions/RelativeTimeIntervalType"
        },
        "ePriceLevel": {
          "description": "Sales_ Tariff_ Entry. E_ Price_ Level. Unsigned_ Integer\r\nurn:x-oca:ocpp:uid:1:569281\r\nDefines the price level of this SalesTariffEntry (referring to NumEPriceLevels). Small values for the EPriceLevel represent a cheaper TariffEntry. Large values for the EPriceLevel represent a more expensive TariffEntry.\r\n",
          "type": "integer",
          "minimum": 0.0
        },
        "consumptionCost": {
          "type": "array",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/ConsumptionCostType"
          },
          "minItems": 1,
          "maxItems": 3
        }
      },
      "required": [
        "relativeTimeInterval"
      ]
    },
    "SalesTariffType": {
      "description": "Sales_ Tariff\r\nurn:x-oca:ocpp:uid:2:233272\r\nNOTE: This dataType is based on dataTypes from &lt;&lt;ref-ISOIEC15118-2,ISO 15118-2&gt;&gt;.\r\n",
      "javaType": "SalesTariff",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customData": {
          "$ref": "#/definitions/CustomDataType"
        },
        "id": {
          "description": "Identified_ Object. MRID. Numeric_ Identifier\r\nurn:x-enexis:ecdm:uid:1:569198\r\nSalesTariff identifier used to identify one sales tariff. An SAID remains a unique identifier for one schedule throughout a charging session.\r\n",
          "type": "integer"
        },
        "salesTariffDescription": {
          "description": "Sales_ Tariff. Sales. Tariff_ Description\r\nurn:x-oca:ocpp:uid:1:569283\r\nA human readable title/short description of the sales tariff e.g. for HMI display purposes.\r\n",
          "type": "string",
          "maxLength": 32
        },
        "numEPriceLevels": {
          "description": "Sales_ Tariff. Num_ E_ Price_ Levels. Counter\r\nurn:x-oca:ocpp:uid:1:569284\r\nDefines the overall number of distinct price levels used across all provided SalesTariff elements.\r\n",
          "type": "integer"
        },
        "salesTariffEntry": {
          "type": "array",
          "additionalItems": false,
          "items": {
            "$ref": "#/definitions/SalesTariffEntryType"
          },
          "minItems": 1,
          "maxItems": 1024
        }
      },
      "required": [
        "id",
        "salesTariffEntry"
      ]
    }
  },
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "customData": {
      "$ref": "#/definitions/CustomDataType"
    },
    "requestId": {
      "description": "Id used to match the &lt;&lt;getchargingprofilesrequest, GetChargingProfilesRequest&gt;&gt; message with the resulting ReportChargingProfilesRequest messages. When the CSMS provided a requestId in the &lt;&lt;getchargingprofilesrequest, GetChargingProfilesRequest&gt;&gt;, this field SHALL contain the same value.\r\n",
      "type": "integer"
    },
    "chargingLimitSource": {
      "$ref": "#/definitions/ChargingLimitSourceEnumType"
    },
    "chargingProfile": {
      "type": "array",
      "additionalItems": false,
      "items": {
        "$ref": "#/definitions/ChargingProfileType"
      },
      "minItems": 1
    },
    "tbc": {
      "description": "To Be Continued. Default value when omitted: false. false indicates that there are no further messages as part of this report.\r\n",
      "type": "boolean",
      "default": false
    },
    "evseId": {
      "description": "The evse to which the charging profile applies. If evseId = 0, the message contains an overall limit for the Charging Station.\r\n",
      "type": "integer"
    }
  },
  "required": [
    "requestId",
    "chargingLimitSource",
    "evseId",
    "chargingProfile"
  ]
}